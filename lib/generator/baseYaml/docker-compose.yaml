#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

networks:
  {{netName}}:

services:
  {{#casByOrg}}
  {{#cas}}
  {{casId}}.{{domain}}:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME={{caName}}
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/{{casId}}.{{domain}}.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/{{key}}
    #  - FABRIC_CA_SERVER_TLS_ENABLED=true
    #  - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/{{casId}}.le.com-cert.pem
    #   FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/0e729224e8b3f31784c8a93c5b8ef6f4c1c91d9e6e577c45c33163609fe40011_sk
      
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/{{casId}}.{{domain}}.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/{{key}} -b admin:adminpw --cfg.identities.allowremove --cfg.affiliations.allowremove -d'
    volumes:
      {{#volumes}}
      - {{{external}}}:{{{internal}}}
      {{/volumes}}
    container_name: {{casId}}.{{domain}}
   {{/cas}}
    networks: 
      - {{netName}}
  {{/casByOrg}}

  {{#orderers}}
  {{ordererId}}.{{netDomain}}:
    container_name: {{ordererId}}.{{netDomain}}
    image: hyperledger/fabric-orderer
    environment:
      - FABRIC_LOGGING_SPEC=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT={{IntPort}}
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_{{netName}}
    #  - ORDERER_GENERAL_TLS_ENABLED=true
    #  - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/crypto/{{ordererId}}/tls/server.key
    #  - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/crypto/{{ordererId}}/tls/server.crt
    #  - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/crypto/{{ordererId}}/tls/ca.crt, /etc/hyperledger/crypto/peerOrg1/tls/ca.crt, /etc/hyperledger/crypto/peerOrg2/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderers
    command: orderer
    ports:
      - {{ExtPort}}:{{IntPort}}
     
    volumes:
      {{#volumes}}
      - {{{external}}}:{{{internal}}}
      {{/volumes}}
    networks: 
      - {{netName}}
  {{/orderers}}
  
  {{#peerByOrgs}}
  {{#peers}}
  {{PeerId}}.{{domain}}:
    container_name: {{PeerId}}.{{domain}}
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ID={{PeerId}}.{{domain}}
      - CORE_PEER_LOCALMSPID={{orgMSP}}
      - CORE_PEER_ADDRESS={{PeerId}}.{{domain}}:{{IntPort}}
      - CORE_PEER_GOSSIP_BOOTSTRAP={{PeerId}}.{{domain}}:{{IntPort}}      
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT={{PeerId}}.{{domain}}:{{IntPort}}

      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_{{netName}}
      #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=ejemplo_myred
       ## the following setting redirects chaincode container logs to the peer container logs
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
     # - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
     # - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
     # - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
     # - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    command: peer node start
    ports:
      - {{ExtPort}}:{{IntPort}}
      - {{ExtGossipPort}}:{{IntGossipPort}}
    volumes:
      - /var/run/:/host/var/run/
      {{#volumes}}
      - {{{external}}}:{{{internal}}}
      {{/volumes}}
    networks: 
      - {{netName}}
    depends_on:
    {{#depends_on}}
      - {{.}}
    {{/depends_on}}
    {{/peers}}
    {{/peerByOrgs}}
